739. Daily Temperatures
Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

 

Example 1:
Input: temperatures = [73,74,75,71,69,72,76,73]
Output: [1,1,4,2,1,1,0,0]
Example 2:
Input: temperatures = [30,40,50,60]
Output: [1,1,1,0]
Example 3:
Input: temperatures = [30,60,90]
Output: [1,1,0]

Code-1: Using Sliding Window
class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        result = [0 for i in range(len(temperatures))]
        l = 0
        r = l + 1
        
        while l < len(temperatures):
            if r < len(temperatures) and temperatures[l] < temperatures[r]:
                result[l] = r - l
                l += 1
                r = l + 1
            elif r < len(temperatures):
                r += 1
            else:
                l += 1
                r = l + 1
        return result
Code-2: Using Stack
from typing import List

class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        n = len(temperatures)
        result = [0] * n 
        
        for i in range(n):
            while stack and temperatures[i] > temperatures[stack[-1]]:
                prev_index = stack.pop()
                result[prev_index] = i - prev_index  
            stack.append(i)  
        return result

Code-3:
class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        warmer = [0] * len(temperatures)
        maxTemp = -1
        for i in range(len(warmer) - 1, -1, -1):
            if temperatures[i] >= maxTemp:
                maxTemp = temperatures[i]
                continue
            j = i + 1
            while temperatures[i] >= temperatures[j]:
                j += warmer[j]
            warmer[i] = j - i
        return warmer
